{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-29T19:12:11.045Z",
    "end": "2021-08-29T19:12:11.686Z",
    "duration": 641,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "834f0bae-1ee9-46c4-bdc6-9a9ecc17256a",
      "title": "",
      "fullFile": "cypress/integration/api/weather.js",
      "file": "cypress/integration/api/weather.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dcaff3e6-4112-4d04-902b-4afa6b62d43d",
          "title": "Open Weather API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get weather of London, UK",
              "fullTitle": "Open Weather API Get weather of London, UK",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let londonCode = 2643741;\nlet APIKey = \"731d5864ddf3ce5dcd66c932a7393924\";\ncy.request({\n  method: 'GET',\n  url: 'http://api.openweathermap.org/data/2.5/weather',\n  qs: {\n    id: londonCode,\n    appid: APIKey\n  }\n}).then(response => {\n  console.log(response);\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(londonCode);\n  expect(response.body).to.have.all.keys('base', 'clouds', 'cod', 'coord', 'dt', 'id', 'main', 'name', 'sys', 'timezone', 'visibility', 'weather', 'wind');\n  assert.isObject(response.body.clouds, 'val is object');\n  expect(response.body.clouds).to.have.keys('all');\n  assert.isObject(response.body.coord, 'val is object');\n  expect(response.body.coord).to.have.keys('lat', 'lon');\n  assert.isObject(response.body.main, 'val is object');\n  expect(response.body.main).to.have.keys('feels_like', 'humidity', 'pressure', 'temp', 'temp_max', 'temp_min');\n  assert.isObject(response.body.sys, 'val is object');\n  expect(response.body.sys).to.have.keys('country', 'id', 'sunrise', 'sunset', 'type');\n  assert.isObject(response.body.wind, 'val is object');\n  expect(response.body.wind).to.have.keys('speed', 'deg', 'gust');\n  assert.isArray(response.body.weather, 'val is array');\n});",
              "err": {},
              "uuid": "b5457fc1-acc1-4ba8-adeb-e331c411d6da",
              "parentUUID": "dcaff3e6-4112-4d04-902b-4afa6b62d43d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5457fc1-acc1-4ba8-adeb-e331c411d6da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 498,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}